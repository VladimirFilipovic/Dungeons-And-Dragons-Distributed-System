server:
  port: 7001
management.endpoint.health.show-details: always
management.endpoints.web.exposure.include: '*'
management.endpoint.health.enabled: true
non-secure-port-enabled: true
secure-port-enabled: false
non-secure-port: 80
secure-port: 443

spring:
  data:
    mongodb:
      host: localhost
      port: 27017
      database: character-db

  
  cloud.stream:
    defaultBinder: rabbit
    default.contentType: application/json
    bindings.input:
      destination: character
      group: characterGroup

  cloud.stream.bindings.input.consumer:
    maxAttempts: 3
    backOffInitialInterval: 500
    backOffMaxInterval: 1000
    backOffMultiplier: 2.0

  cloud.stream.rabbit.bindings.input.consumer:
    autoBindDlq: true
    republishToDlq: true

  cloud.stream.kafka.bindings.input.consumer:
    enableDlq: true

  cloud.stream.kafka.binder:
    brokers: 127.0.0.1
    defaultBrokerPort: 9092

  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest


  logging:
    level:
      root: INFO
      dnd.microservices: DEBUG
      org.springframework.data.mongodb.core.MongoTemplate: DEBUG

  profiles:
    active: default
---

spring:
  profiles: docker

  data:
    mongodb:
      host: mongodb
  
  rabbitmq.host: rabbitmq

  cloud.stream.kafka.binder.brokers: kafka

server:
  port: 8080
