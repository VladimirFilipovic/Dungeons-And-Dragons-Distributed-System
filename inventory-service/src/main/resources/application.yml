server.port: 7003
management.endpoint.health.show-details: "ALWAYS"
management.endpoints.web.exposure.include: "*"  
# Strongly recommend to set this property to "none" in a production environment!
spring.jpa.hibernate.ddl-auto: update

app:
  eureka-username: u
  eureka-password: p
  eureka-server: localhost

eureka:
  client:
    serviceUrl:
      defaultZone: "http://${app.eureka-username}:${app.eureka-password}@${app.eureka-server}:8761/eureka/"
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5


spring:
  application:
    name: api-inventory

  datasource:
    url: jdbc:mysql://localhost/items-db
    username: user
    password: pwd

  cloud.stream:
    defaultBinder: rabbit
    default.contentType: application/json
    bindings.input:
      destination: inventory
      group: inventoryGroup

  cloud.stream.bindings.input.consumer:
    maxAttempts: 3
    backOffInitialInterval: 500
    backOffMaxInterval: 1000
    backOffMultiplier: 2.0

  cloud.stream.rabbit.bindings.input.consumer:
    autoBindDlq: true
    republishToDlq: true

  cloud.stream.kafka.bindings.input.consumer:
    enableDlq: true

  cloud.stream.kafka.binder:
    brokers: 127.0.0.1
    defaultBrokerPort: 9092

  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
    
  logging:
    level:
        root: INFO
        dnd.microservices: DEBUG
        org.hibernate.SQL: DEBUG
        org.hibernate.type.descriptor.sql.BasicBinder: TRACE

  profiles:
    active: default


spring.datasource.hikari.initializationFailTimeout: 60000
---

spring:
  profiles: docker

  datasource:
    url: jdbc:mysql://mysql/items-db
  
  rabbitmq.host: rabbitmq

  cloud.stream.kafka.binder.brokers: kafka

server:
  port: 8080


app.eureka-server: eureka